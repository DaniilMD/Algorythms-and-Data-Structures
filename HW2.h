#include <stdlib.h>

// Дементьев Д.М.


// Задание 1
//1. Реализовать функцию перевода из 10 системы в двоичную используя рекурсию.
void TransformDecIntoBin(int num, long long* binNum, int check) {
	if (num != 0) {
		TransformDecIntoBin(num/2,  binNum, 1);

	}
	*binNum += (num % 2);
	if (check) {
		*binNum *= 10;
	}

}
// Не знаю как избавиться от лишнего умножения, поэтому добавил 3 аргумент


// Задание 2
//2. Реализовать функцию возведения числа a в степень b:
	//a. без рекурсии; (На лекции вы убрали этот пункт)
	//b. рекурсивно;
	//c. *рекурсивно, используя свойство чётности степени.

//b)
int Involution(int a, int b) {
	if (b == 0) {
		return 1;
	} else {
		return (Involution(a, --b) * a);
	}
}

//c)
int Power(int num, int k) {
	if ((k % 2) == 0) {
		return Power(num * num, k / 2);
	} else {
		return Involution(num, k);
	}
}

// Задание 3
//3. Исполнитель Калькулятор преобразует целое число, записанное на экране. У исполнителя две команды, каждой команде присвоен номер:
//1. Прибавь 1; 2.Умножь на 2; Первая команда увеличивает число на экране на 1, вторая увеличивает это число в 2 раза.
//Сколько существует программ, которые число 3 преобразуют в число 20? а) с использованием массива (на лекции этого задание убрали);
//б) с использованием рекурсии.

void VariantCounter(int l, int r, int* counter) {
	if ((l * 2) < r) {
		VariantCounter(l * 2, r, counter);
	}
	if ((l + 1) < r) {
		VariantCounter(l + 1, r, counter);
	}
	if ((l * 2) == r) {
		++*counter;
	}
	if ((l + 1) == r) {
		++*counter;
	}
	return;
}

